substitutions:
  devicename: roode32
  friendly_name: $devicename

external_components:
  refresh: always
  source:
    type: git
    url: https://github.com/Lyr3x/Roode
    ref: master

esphome:
  name: $devicename
  platform: ESP32
  board: wemos_d1_mini32
  libraries:
    - pololu/VL53L1X@^1.3.0

wifi:
  networks:
    - ssid: !secret ssid1
      password: !secret ssid1_password
  use_address: $devicename
  fast_connect: True
  power_save_mode: none
  domain: .local

captive_portal:

api:
  password: !secret api_password
  reboot_timeout: 60min
  services:
    - service: set_counter
      variables:
        newCount: int
      then:
        - lambda: "id(roode_platform)->sendCounter(newCount);"
    - service: reset_counter
      then:
        - lambda: "id(roode_platform)->sendCounter(0);"
    - service: recalibrate
      then:
        - lambda: "id(roode_platform)->recalibration();"

ota:
  password: !secret ota_password

web_server:
  port: 80
  auth:
    username: admin
    password: !secret web_password

# Enable logging
logger:
  level: INFO

i2c:
  sda: 21
  scl: 22

roode:
  id: roode_platform
  address: 0x29
  update_interval: 10ms
  calibration: true
  roi_height: 16
  roi_width: 6
  max_threshold_percentage: 80
  roi_calibration: false
  invert_direction: true
  restore_values: true

switch:
  - platform: restart
    name: $friendly_name Restart
binary_sensor:
  - platform: status
    name: $friendly_name Status
  - platform: roode
    presence_sensor:
      name: $friendly_name presence

sensor:
  - platform: roode
    id: hallway
    people_counter_sensor:
      id: peopleCounter
      name: $friendly_name people counter
    distance_sensor:
      name: $friendly_name distance
      filters:
        - delta: 10.0
    max_threshold_zone0:
      name: $friendly_name max zone 0
    max_threshold_zone1:
      name: $friendly_name max zone 1
    min_threshold_zone0:
      name: $friendly_name min zone 0
    min_threshold_zone1:
      name: $friendly_name min zone 1
    roi_height:
      name: $friendly_name ROI height
    roi_width:
      name: $friendly_name ROI width

  - platform: wifi_signal
    name: $friendly_name RSSI
    update_interval: 60s

  - platform: uptime
    name: Uptime Sensor
    id: uptime_sensor
    update_interval: 60s
    internal: true
    on_raw_value:
      then:
        - text_sensor.template.publish:
            id: uptime_human
            state: !lambda |-
              int seconds = round(id(uptime_sensor).raw_state);
              int days = seconds / (24 * 3600);
              seconds = seconds % (24 * 3600);
              int hours = seconds / 3600;
              seconds = seconds % 3600;
              int minutes = seconds /  60;
              seconds = seconds % 60;
              return (
                (days ? String(days) + "d " : "") +
                (hours ? String(hours) + "h " : "") +
                (minutes ? String(minutes) + "m " : "") +
                (String(seconds) + "s")
              ).c_str();

text_sensor:
  - platform: roode
    version:
      name: $friendly_name version
  - platform: roode
    entry_exit_event:
      name: $friendly_name last direction
  - platform: template
    name: $friendly_name Uptime Human Readable
    id: uptime_human
    icon: mdi:clock-start
